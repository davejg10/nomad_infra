name: deploy-nomad-infra
run-name: Terraform deploy ${{ github.event.inputs.app_name }} in ${{ github.event.inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options: 
          - dev
          - test
          # - prod
      app_name:
        type: choice
        description: Application name
        options: 
          - nomad-backend
    
env:
 ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
 ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
 ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
 ARM_USE_AZUREAD: true
 work_dir: ./iac

permissions:
  id-token: write
  contents: read

jobs:
  terraform_plan:
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ${{ env.work_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Get backup snapshot name
        run: |
          NEO4J_BACKUP_DISK_PREFIX="neo4j-datadisk-backup"
          NEO4J_BACKUP_DISK_NAME="null"
          find_backup_disk=$(az disk list -g rg-dev-uks-backup-snapshots --query "[?contains(name, "$NEO4J_DATADISK_SUFFIX")] | sort_by(@, &timeCreated)[-1].name" --output json)
          if [[ -z "$find_backup_disk" ]]; then
            NEO4J_BACKUP_DISK_NAME=$find_backup_disk
          fi

          echo "NEO4J_BACKUP_DISK_PREFIX=$NEO4J_BACKUP_DISK_PREFIX" >> $GITHUB_ENV
          echo "NEO4J_BACKUP_DISK_NAME=$NEO4J_BACKUP_DISK_NAME" >> $GITHUB_ENV

      
      - name: Terraform plan
        uses: davejg10/pipeline_templates/.github/actions/terraform_plan@v1
        with:
          backend_azure_resource_group_name: ${{ vars.backend_azure_resource_group_name }}
          backend_azure_storage_account_name: ${{ vars.backend_azure_storage_account_name }}
          backend_container_name: ${{ github.event.inputs.app_name }}
          environment: ${{ github.event.inputs.environment }}
          work_dir: ${{ env.work_dir }}
          additional_tf_vars: -var "neo4j_backup_disk_name=${{ env.NEO4J_BACKUP_DISK_NAME }}" "neo4j_backup_disk_prefix=${{ env.NEO4J_BACKUP_DISK_PREFIX }}"
      
  terraform_apply:
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment }}
    needs: terraform_plan
    defaults:
      run:
        working-directory: ${{ env.work_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Terraform apply
        uses: davejg10/pipeline_templates/.github/actions/terraform_apply@v1
        with:
          backend_azure_resource_group_name: ${{ vars.backend_azure_resource_group_name }}
          backend_azure_storage_account_name: ${{ vars.backend_azure_storage_account_name }}
          backend_container_name: ${{ github.event.inputs.app_name }}
          work_dir: ${{ env.work_dir }}